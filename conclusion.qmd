# Kit de démarrage pour les sciences sociales numériques

```{=tex}
\begin{center}

Marc-Antoine Rancourt, Flavie Lachance, Justine Béchard, William Poirier

\end{center}
```
## Introduction

Alors que les chapitres précédents se sont consacrés à la présentation théorique et pratique des sciences sociales numériques, le présent chapitre s'efforcera à aider le lecteur à faire sens de la grande quantité d'information que contient l'ouvrage et à commencer sa propre démarche d'apprentissage numérique. À ce propos, le titre n'est pas anodin. Il est possible de voir ce chapitre comme l'endroit où débuter son apprentissage des nouveaux outils numériques présentés dans cet ouvrage. 

En plus d'aider de lecteur à installer et à utiliser plusieurs des outils présentés précedemment, ce chapitre offre également des conseils afin d'éviter de communs pièges lors de l'apprentissage de nouveaux outils. Le corps du texte du présent chapitre est divisé en trois parties en lien avec le niveau de difficulté associés à l'apprentissage des différents outils numériques: débutant, intermédiaire et avancé. De plus, chaque partie termine par une liste de pièges à éviter et qui est associé au niveau d'apprentissage qui lui est propre.


## Débutant

Cette section peut s'adresser à tous les lecteurs, mais elle vise particulièrement ceux et celles qui débutent leurs parcours dans le monde numérique. Elle se divisera en deux sous-sections portant chacune sur un type d'outils nécessaires à la pratique des sciences sociales numériques. La première partie couvre le langage de programmation R et l'environnement de programmation qui lui est associé, RStudio. Elle commence par présenter au lecteur comment télécharger R et RStudio correctement. Ensuite, elle offre différentes ressources afin de pouvoir apprendre à utiliser R et naviguer RStudio adéquatement. La seconde section guide le lecteur dans l'installation de \LaTeX, puis présente des ressources utiles à son utilisation.

### R et RStudio

Le chapitre 4 du présent livre introduit le langage de programmation R, ses avantages, ses inconvénients et son utilité. Cette partie du livre se veut un complément à ce chapitre visant à aider le lecteur à se familiariser avec le langage R. La première étape pour mener à bien cette tâche est de le télécharger. R fonctionne sur une grande quantité de plateformes, notamment sur les différentes distributions de Windows, de macOS et de Linux. Pour le télécharger, il faut commencer par se rendre sur le *Comprehensive R Archive Network*. Il est fortement conseillé d'utiliser ce site puisqu'il est l'endroit principal où se trouve la plupart des choses liées à R. Il est aussi facile d'utilisation, très bien documenté et régulièrement mis à jour. Il est possible d'accéder le site à partir de l'adresse suivante : https://cran.r-project.org/. Dans le haut de la page, un lien pour chacun des trois systèmes d'exploitation principaux -- Windows, macOS et Linux -- redirige vers la page appropriée. Il suffit de cliquer sur la distribution présente sur l'ordinateur et l'installer. 

Il existe plusieurs ressources qu'un nouvel utilisateur de R peut consulter afin de se familiariser avec le langage de programmation. Comme pour de nombreuses autres choses, il est possible d'apprendre en faisant des exercises en ligne et en suivant des tutoriels. Les tutoriels sont une manière tout autant enrichissante que divertissante pour se familiariser avec certains outils du monde numérique, notamment le langage R. DataCamp est un des sites les plus populaires, mais aussi les plus complets et accessibles, à cette fin. Datacamp est une plateforme d'apprentissage en ligne proposant des exercices interactifs en ligne, axé principalement sur l'analyse et les données. La plateforme est facile à utiliser et contient une grande quantité de module sur les différents aspects du langage R. En date de 2023, selon le site de l'entreprise, DataCamp contient plus de 140 cours interactifs portant sur le langage R, en plus de contenir plus de 100 tutoriels variés. La plateforme a également un forum où il est possible d'interagir avec les autres utilisateurs et poser des questions. Un autre avantage de Datacamp est son accessibilité. En plus des cours accessibles gratuitement, Datacamp offre des réductions sur les abonnements pour les étudiants et les enseignants. Il est également possible pour les enseignants d'obtenir gratuitement un compte Datacamp Entreprise à des fins d'utilisation éducative. D'autres plateformes dans le même genre que DataCamp existent. Les alternatives les plus populaires sont CodeAcademy et Coursera. Bien qu'il n'y ait rien de mal à proprement parler à utiliser ces alternatives, nous conseillons DataCamp car cette plateforme apparaît être la meilleure pour l'apprentissage de nouveaux outils numériques destinés à la science des données en sciences sociales. 

En plus de ces différentes ressources en ligne, plusieurs excellent ouvrages d'introduction au langage de programmation R sont disponibles. Les auteurs du présent ouvrage proposent trois ouvrages aux nouveaux utilisateurs. Le livre *R For Data Science* d'Hadley Wickham et de Garret Grolemund est un classique en la matière et est un excellent guide sur les différents éléments à apprendre pour bien maîtriser le langage de programmation R ainsi que son utilité en sciences sociales computationnelles. Publié pour la première fois en 2017, il a été réédité une seconde fois en 2023 et est disponible gratuitement en ligne à l'adresse suivante: https://r4ds.hadley.nz/. Un second ouvrage qui peut être utile est *The Book of R: A First Course in Programming and Statistics* de Tilman Davies. Le *Book of R*,  comme certains l'appelle, est un guide complet et convivial pour les débutants en R. Contrairement à d'autres ressources du même genre, il ne demande aucune expérience en programmation et à peine quelques connaissances de base en mathématiques afin de commencer à apprendre à utiliser R efficacement pour l’analyse statistique. Finalement, le troisième ouvrage, *Beyond Spreadsheets with R: A beginner's guide to R and RStudio* de Jonathan Caroll, montre comment prendre des données brutes et les transformer pour les utiliser dans des calculs, des tableaux, des graphiques, etc. Le livre a pour but d'aider le lecteur à bâtir des bases solides afin de lui permettre d'analyser et visualiser des données de toutes sortes à l'aide de R. Un avantage qu'a cet ouvrage sur les autres est qu'il est également un guide d'apprentissage pour RStudio. Ce livre, ainsi que celui de Tilman Davies, sont disponibles sur Amazon et autres plateformes de vente de livres. 

En ce qui a trait à RStudio, outre que le livre de Tilman Davies susmentionné, il existe plusieurs ressources en ligne pouvant aider les utilisateurs débutants. DataCamp a un long tutoriel dédié à apprendre à utiliser l'environnement de programmation RStudio. Le site web de RStudio a également une section sur les bases de l'environnement de programmation. Plusieurs institutions offrent également de courts tutoriels par le biais de pages webs ou de vidéos accessibles sur des plateformes telles que Youtube. Autant pour R que pour RStudio, une grande quantité de ressources d'aide sont disponibles en ligne. Des forums tels que Stack Overflow et la section discussion de GitHub peuvent être très utiles pour avoir une réponse rapide à une question technique. 


### Les alternatives à Word : les langages de balisage

Le chapitre 5 du présent ouvrage introduit les langages de balisage \LaTeX et Markdown, leurs historiques ainsi que leurs avantages et inconvénients. Cette partie du livre se veut un complément au chapitre 5 visant à aider le lecteur à se familiariser avec les principaux langages de balisage utilisés en sciences sociales numériques. La première étape pour afin d'utiliser les langages de balisage \LaTeX et Markdown est de les télécharger. Bien que LaTeX peuvent être téléchargé à différents endroits, celui qui est généralement considéré comme étant officiel est le *Comprehensive TEX Archive Network* (CTAN). Le CTAN est disponible à l'adresse suivante : https://www.ctan.org/. Le CTAN est le lieu central pour tout ce qui touche \LaTeX. CTAN compte actuellement 6483 packages, auxquels ont contribués 2946 usagers. La plupart des packages sont gratuits et peuvent être téléchargés et utilisés immédiatement. Les deux distributions TeX les plus couramment utilisées sont TEX Live et MiKTeX. Bien que leurs avantages aient été relativement différents dans le passé, en 2023, un nouvel usager ne verrait probablement pas la différence. Les deux distributions peuvent être téléchargées à partir du site Web du CTAN et utilisées rapidement. Elles sont supportés sur tous les versions principales de Linux, MacOS et Windows. 

Plusieurs ressources pour \LaTeX peuvent se trouver en ligne. *The LaTeX Project* est une excellente source d'information sur le langage de balisage LaTeX. Cette ressource est disponible à l'adresse suivante : https://www.latex-project.org/. Elle contient une grande quantité de documentation à l'usage de nouveaux usagers, des nouvelles sur les mises à jours \LaTeX ainsi qu'une liste de publications portant sur \LaTeX et son utilisation. Le site Web contient également plusieurs liens utiles vers GitHub ainsi que des informations pertinentes sur l'historique du langage. D'autres ressources sous formes de livres et d'articles existent et peuvent être très utiles aux nouveaux usagers de \LaTeX. Le livre *Learning LATEX* par David Griffiths et collègues, publié en 1997, tient encore la route aujourd'hui. On peut y apprendre les bases du langages \LaTeX qui n'ont pas changé depuis des décennies. En 2017, un autre livre important pour les nouveaux usagers est paru. *LaTeX in 24 Hours: A Practical Guide for Scientific Writing*, écrit par Dilip Datta, offre un aperçu de LaTeX aux académiques peu d’expérience technique préalable. Le livre présente aux lecteurs des exercices et des exemples simples et compréhensibles pour se familiariser rapidement avec le langage. Une grande quantité d'autres ressources sont disponibles sur le Web.

Comme noté au chapitre 5, Markdown est un langage de balisage servant à ajouter des éléments de formatage à des documents en texte brut. Il n'a pas à être téléchargé, il est natif à la plupart des systèmes d'opérations régulièrement utilisés. Afin de commencer à l'utiliser, il suffit d'ajouter des éléments de formatage Markdown à un fichier texte brut à l'aide d'un éditeur de texte. Il est également possible d'utiliser l'une des nombreuses applications Markdown pour les systèmes d'exploitation macOS, Windows, Linux, iOS et Android. Il existe également plusieurs applications Web spécialement conçues pour écrire en Markdown. L'environnement de programmation RStudio, susmentionné ainsi que présenté au chapitre 4, est un excellent endroit pour écrire en Markdown. RStudio permet également à l'utilisateur d'écrire en RMarkdown ainsi qu'en Quarto. 

Comme \LaTeX, Markdown est un langage de balisage qui existe depuis longtemps et dont les bases n'ont pas particulièrement changées dans les dernières décennies. Ainsi, il existe une panoplie de ressources en ligne aidant les nouveaux usagers à se familiariser avec le langage. Le créateur de Markdown, John Gruber, a un site Web contenant les bases du langage Markdown. Ce dernier peut être trouvé à l'adresse suivante : https://daringfireball.net/projects/markdown/. Le site Web *Markdown Tutorial*, comme son nom l'indique, est un site Web open source qui permet d'essayer Markdown dans le navigateur Web. Il est disponible à l'adresse suivante : https://www.markdowntutorial.com/. En format livre, le livre *The Markdown Guide* par Matt Cone est une courte mais complète introduction aux bases de Markdown. De la mise en forme à la publication, ce livre contient une grande quantité d'information et de ressources qui peuvent être même utiles aux usagers avancés. Comme pour \LaTeX, une grande quantité d'autres ressources sont facilement accessibles sur le Web.

### Pièges pour usagers débutants

Beaucoup de nouvelles informations ont été présentées jusqu'à présent dans ce livre. Il est normal de se sentir dépassé et de ne pas tout comprendre. En fait, il aurait été surprenant qu'un lecteur qui débute l'aventure numérique ait tout compris. L'important est de garder une attitude propice à l'apprentissage et se rappeler que rien de ceci n'est inatteignable. C'est au tout début du parcours que se trouve le premier des pièges pour débutants : **croire qu'il sera trop difficile d'apprendre, que c'est un objectif impossible à atteindre**. Même les auteurs de ce livre ont, un jour, commencés par faire *Hello World!* dans la console de RStudio. Le premier piège est souvent lié à un autre piège qui frappe les codeurs débutants : **la peur de demander de l'aide**. Il faut garder à l'esprit qu'une grande quantité des utilisateurs des outils présentés dans le présent livre sont passés par l'incertitude du début et la crainte du jugement des autres. N'ayez pas peur de poser vos questions, c'est comme cela qu'on apprend.

Une autre catégorie de pièges pour débutants pour les débutants concerne la pratique des connaissances nouvellement acquises. Les pièges pour débutants de cette catégorie sont au nombre de trois. Tout d'abord, on retrouve **la croyance qu'il est possible d'apprendre sans pratiquer**. Bien que cela puisse être possible pour quelques personnes ayant une mémoire phénoménale, la réalité est qu'il sera difficile pour le lecteur moyen de retenir l'information contenue dans ce livre et dans les exercices sans pratiquer les nouvelles notions. Le second piège de cette catégorie est lié à ce dernier point : DataCamp -- où il y a des indices et du code déjà écrit -- ne forme pas à lui seul des codeurs. Il faut faire attention à **ne pas rester pris dans une boucle infinie de tutoriels**. Faire des tests avec des projets personnels aide à assimiler les nouvelles connaissances en plus d'être plus intéressant. Le troisième pièges pour débutants de cette catégorie est de **ne pas être constant dans ses apprentissages**. Avec les exercices comme Datacamp, il est facile d'apprendre très rapidement. Toutefois, les apprentissages peuvent se perdre aussi rapidement qu\'ils ont été acquis. Il est donc important de suivre une certaine continuité et même parfois de refaire certains exercices afin de se rafraichir la mémoire pour s'assurer de bien comprendre les connaissances de base.

Le dernier pièges pour débutants est le suivant : **ne pas construire des bases solides avant d'aller plus loin**. Plusieurs nouveaux codeurs, excités par les nouveaux outils qu'ils apprennent, oublient qu'il est primordial de bien comprendre les éléments de base de la programmation et de la gestion de données avant de se lancer dans des projets plus complexes. Bien qu'il ne soit pas requis de connaître la mécanique pour conduire une automobile, il est tout de même parfois utile -- voir nécessaire -- de comprendre comment entretenir celle-ci.

## Intermédiaire

Tout comme la section précédente, cette section peut tout à fait être utile à tous les lecteurs. Cependent, elle vise particulièrement ceux et celles qui ont commencé leurs parcours dans le monde numérique, mais qui cherchent à complémenter leur parcours d'outils qui leur facilitera la vie. Cette section se divise en deux sous-sections portant chacune sur un type d'outils nécessaires à la pratique des sciences sociales numériques. La première partie couvre des ressources de gestion bibliographique.  Elle commence par présenter au lecteur comment télécharger correctement les différents outils. Ensuite, elle offre différentes ressources afin de pouvoir apprendre les utiliser adéquatement. La seconde section guide le lecteur l'apprentissage de la visualisation graphique en R, puis présente des ressources utiles à sa pratique.

### La gestion des références

Le chapitre 6 du présent livre porte sur la gestion des références. Il présente deux ressources de gestion bibliographique largement utilisés : Zotero et BibLaTex. Cette partie du livre se veut un complément au chapitre 6. La première étape pour afin d'utiliser deux outils de gestion des références susmentionnés est de les télécharger. En ce que concerne Zotero, celui-ci peut être téléchargé à partir du site Web officiel de l'outil à l'adresse suivante : https://www.zotero.org/download/. Le site Web de Zotero contient une grande quantité de documentation pouvant aidant les différents niveaux d'utilisateurs. Ladite documentation aide notamment à apprendre à créer des bibliographies, comment travailler en collaboration et les différents *plug-ins* et *add-ons* qui peuvent être utilisés. Parmi ceux-ci, on retrouve notamment *Better BibTex* -- présenté au chapitre 6 -- qui aide grandement la gestion de données bibliographiques pour ceux utilisant Zotero et un langage de balisage tel que \LaTeX ou Markdown. *Better BibTex* peut être téléchargé à l'adresse suivante : https://retorque.re/zotero-better-bibtex/installation/. Le site Web de *Better BibTex* contient également une foule de documentation aisant l'utilisation de l'outil. 

La littérature académique sur les différents outils aidant à la gestion des données bibliographiques indiquent que beaucoup des professionnels de différents milieux utilisent Zotero. Il est aussi possible de constater que plusieurs préfèrent Zotero à d'autres options connues telles que EndNotes, RefWorks et Mendeley. Behera et Meher (2022) notent 13 avantages de Zotero sur sa compétition. Parmi ceux-ci, on retrouve notamment la capacité de Zotero à supporter une grande quantité de formats d'écriture, son caractère *open source* et gratuit, son dévelopement constant par de nombreux chercheurs assurant sa qualité, en plus de son utilité pour le travail collaboratif. Ivey et Crum (2018) comparent les quatre options les plus populaires pour la gestion des données bibliographiques : Zotero, EndNotes, RefWorks et Mendeley. Ils notent pour leur part que Zotero était l'outil le plus précis pour la capture et la transformation de données Web en notices bibliographiques. Selon eux, Zotero créerait les notices bibilographiques les plus exactes. Parmi les options populaires grautuites Zotero et Mendeley, Gilmour et CobusKuo (2011) concluent que Zotero est la meilleure. Les auteurs notent notamment la précision des bibliographiques extractées et le peu d'erreurs produites par l'outil. Winslow et al. (2016) montrent, pour leur part, que Zotero peut aussi être utilisé à des fins pédagogiques. L'outil peut aider les chercheurs avec la littérature sur un sujet en plus d'avoir un impact concret sur les pratiques scientifiques. 

Pour sa part, BibLaTeX n'a pas besoin d'être téléchargé puisque c'est un package qui vient avec essentiellement toutes les principales distributions TeX. Il ne suffit que d'utiliser la commande `\usepackage{biblatex}` pour y avoir accès. C'est une des trois alternatives populaires afin de citer avec LaTeX, les autres étant *natbib* et *bibtex*. Biblatex est généralement considéré comme étant l'option \LaTeX moderne pour traiter les données bibliographiques. Plusieurs apprécient grandement son interface simple et flexible. BibLaTeX supporte aussi mieux des langages autres que l'anglais en comparaison avec les deux autres options. 

Le susmentionné CTAN contient une grande quantité de documentation portant sur BibLaTeX à l'adresse suivante : https://www.ctan.org/pkg/biblatex. De plus, Philip Kime, Moritz Wemheuer et Philipp Lehman ont mis en ligne un excellent guide intitulé « The biblatex Package » portant sur le package. Les auteurs ont compilé en 357 pages toutes les possiblités du package avec des exemples précis. Le document contient un guide pour les usagers de plus de 100 pages, en plus d'un historique des versions du package depuis 2012. Le document est à jour pour l'année 2023, et il est constamment mis à jour par les auteurs. 


### Visualisation graphique en R

Le chapitre 7 du présent ouvrage porte sur la visualisation graphique en R, les différentes options pour visualiser des données et une discussion concrète de la manière de faire avec *base R*, *lattice* et *gpglot2*. Pour plusieurs raisons présentées aux chapitre 7, *ggplot2* est présentement considéré comme étant la meilleure alternative de visualisation graphique avec R en sciences sociales numériques. Comme BibLaTeX, *ggplot2* n'a pas besoin d'être directement téléchargé à partir du Web. Il peut être téléchargé seul avec la fonction R *install.packages* ou avec le super-package *tidyverse*. Il ne suffit que le l'appeler avec la fonction *library* pour y avoir accès une fois que cela est fait. 

Outre le contenu du chapitre 7, une grande quantité de ressources est disponible en ligne afin de guider les utilisateurs de R dans leurs démarches de visualisation graphique. Youtube, StackOverflow et les autres sites Webs contenant des tutoriels ou de l'aide à la programmation sont remplis de guides pouvant être utiles. Toutefois, nous considérons que certaines ressources sont plus utiles que d'autres afin de bien comprendre les bases de *ggplot2*. Le susmentionné livre *R For Data Science* d'Hadley Wickham et de Garret Grolemund contient une importante section sur la création de graphiques avec *ggplot2* en R. Cette section du livre contient également des exercices pour le lecteur. Hadley Wickham a beaucoup travaillé sur ce sujet. Il a écrit plusieurs livres et articles sur le langage de programmation R et la visualisation graphique. Parmi lesdits écrits, l'article de Wickham (2010) est une ressource édifiante pour le compréhension de la *grammar of graphics*, à la base du projet *ggplot*. Wickham et collègues ont également écrit *ggplot2: Elegant Graphics for Data Analysis (3e)* qui porte également sur la philosophie derrière la création et l'utilisation de *ggplot2*. D'autres ouvrages, plus pratiques, ont été publié sur la visualisation graphique en R avec *ggplot2*. C'est notamment le cas du livre de Robert Kabacoff sur l'apprentissage de la visualisation graphique avec *ggplot2* « Modern Data Visualization with R ». Il est disponible en ligne à l'adresse suivante : https://rkabacoff.github.io/datavis/. Il couvre une grande quantité d'analyses statistiques possibles à faire en R et les meilleures manières de les présenter visuellement. Chaque type de graphique est accompagné de plusieurs exemples et d'une base de données. Finalement, DataCamp, la plateforme d'apprentissage mentionnée précédemment dans le présent chapitre, contient plusieurs tutoriels permettant à de nouveaux utilisateurs de se pratiquer avec *ggplot2*. DataCamp contient trois cours complets, pour 12 heures de tutoriels, sur la visualisation en R avec *ggplot2*, allant du niveau de débutant jusqu'au niveau avancé. 


### Pièges pour usagers intermédiaires :

À la suite des différents exercices et lectures complètés dans le cadre de cette familiarisation aux sciences sociales numériques, le lecteur doit s'assurer d'éviter certains pièges qui se dressent sur le chemin des chercheurs de niveau intermédiaire. Le premier d'entre eux est **vouloir apprendre plusieurs langages et n'en maîtriser aucun**. Plusieurs chercheurs, lorsqu'ils commencent à maîtriser de nouveaux outils, s'emballent et souhaitent en apprendre davantage. C'est une bonne chose, mais il faut faire attention à ne pas apprendre que quelques éléments de plusieurs langages de programmation, et plutôt en maîtriser un. Comme le dit un diction populaire, « qui trop embrasse mal étreint ».

Un second pièges pour usagers intermédiaires auquel de jeunes chercheurs sont la proie est **coder en n'utilisant pas un style et une planification cohérente et constante**. En n'adoptant pas un style standard -- ou en n'utilisant pas le plus souvent le même style -- il peut devenir difficle pour les autres et pour soi-même de se retrouver dans le code. Cela peut causer d'importants problèmes de compréhension ou des problèmes techniques. Il est rare qu'un même code ne serve qu'une seule fois. Il est donc de viser à ce que le code qu'on produit soit compréhensible, transférable et -- idéalement -- optimisé. Un autre pièges pour usagers intermédiaires s'inscrivant dans la lignée du précédent est **écrire du code mais ne pas le commenter**. Commenter son code contribue grandement à la transférabilité et la pérennité de son travail. Bien que la fonction d'une section de code peut sembler évidente pour son créateur le jour où elle est produite, elle ne le sera pas nécessairement pour d'autres ou pour lui-même dans le futur.

Le troisième pièges pour usagers intermédiaires concerne l'utilisation des packages R. De nombreux packages r sont disponibles sur Internet. Dans certaines situations, l'utilisation de ceux-ci peut représenter un gain de temps et résoudre certains problèmes spécifiques. Toutefois, pour des tâches relativement simples, utiliser un package r risque d'ajouter une complexité inutile. En effet, comprendre un package R et l'adapter en fonction de son projet peut être long et laborieux. Il est donc souvent beaucoup plus efficace d'écrire son propre code plutôt que d'utiliser un package R.

Le dernier piège se dressant sur le chemin d'un chercheur de niveau intermédiaire est de **croire qu'il a suffisamment de connaissances et ne pas sortir de sa zone de confort**. L'apprentissage de techniques plus complexes demande de sortir de sa zone de confort et de se confronter à l'inconnu. Cela demande également d'accepter qu'on ne connait pas tout et qu'il y aura des échecs et des frustrations. C'est ainsi qu'un chercheur intermédiaire peut dépasser ses limites et devenir un chercheur de niveau avancé.

## Avancé

### Le travail collaboratif

Le chapitre 8 du présent ouvrage présente principalement trois types d'outils complémentaires pour le travail collaboratif : les outils de communications, les outils de gestion de versions et les outils d'entreposage de données. Cette section est complémentaire au chapitre 8 qui présente les différents outils et leurs plusieurs avantages et inconvénients. Elle vous présentera des façons d'en apprendre plus sur ces trois types d'outils et de commencer à les utiliser. 

L'outil de communication priorisé par les auteurs du chapitre 8 est Slack, une plateforme de communication utilisée dans le monde professionnel et académique où se trouvent différents salons de conversations et qui possède une tonne de fonctionnalités telles que les appels de groupes et le partage de documents. Gofine et Clark (2017) notent que Slack est un outil spécialement utile pour la communiaction, la planification et le partage de document en milieu académique. En ce qui concerne la documentation existente, le site Web de Slack contient plusieurs pages portant sur les différentes options de l'application ainsi que des liens vers des vidéos réalisées par leur équipe afin d'aider les utilisateurs à utiliser l'outil de manière efficace. La chaîne Youtube de la compagnie contient plusieurs vidéos aidant les nouveaux usagers à naviguer l'application. Du côté livre, le court ouvrage de Jonathan Miller *Getting Started with Slack: A Quick Start Guide for Everyone*, disponible sur le Web en format Kindle, est une bonne introduction à l'utilisation de Slack. L'auteur présente différentes techniques afin d'optimiser les communications d'équipe et les bonnes pratiques en terme d'utilisation de l'outil.  

En ce qui a trait aux outils de gestion de versions, Git est le logiciel priorisé. Git est souvent utilisé à partir de GitHub, la plateforme Web principale pour l'outil. Le chapitre 8 présente Git et GitHub ensemble puisqu'ils sont utilisés de manière complémentaire par de nombreux usagers. Pour beaucoup d'utilisateurs, Git est la façon dont ils intéragissent avec le site Web GitHub, où se trouve leur données, à partir de la ligne de commande de leur ordinateur. D'autres téléchargent directement leurs fichiers à partir du Web et utilisent Git à partir de l'interface GitHub. Bien que certains utilisent Git mais pas GitHub, nous pensons que pour commencer, il est souhaiter d'utiliser les deux outils ensemble. Outre le contenu du chapitre 8, afin de commencer à utiliser Git et GitHub, il est possible de consulter le site Web de GitHub, qui contient beaucoup de documentation, et sur lequel il faut d'ailleurs se créer un compte. Plus d'une dizaine de livres sur Git et GitHub sont accessibles sur le Web. Après les avoir consulté, aucun d'entre eux ne semblent particulièrement pertinent à recommander ici. Rien ne semble battre l'abondance de ressources disponible sur le site de GitHub. Il contient même plusieurs dizaines de tutoriels afin d'en apprendre davantage sur les différentes commandes Git et les façons d'utiliser GitHub. Il est possible de trouver cela à l'adresse suivante : https://skills.github.com/. Consulter les différentes pages de documentation sur GitHub et commencer à utiliser l'outil semble être la meilleure manière d'apprendre. 

Finalement, pour ce qui concerne les outils d'entreposage de données, les options proposées au chapitre 8 sont les plateformes Dropbox et Amazon Web Services (AWS). Commencer à utiliser Dropbox est assez intuitif. C'est similaire à l'arborescence de fichier d'un ordinateur commun, mais en ligne. Et puisque Dropbox peut être téléchargé et installé comme d'autres applications sur les différentes versions de Windows, de MacOS et de Linux, il est possible de synchroniser un dossier Dropbox en local avec son Dropbox en ligne. La seule chose qu'il faut pour utiliser Dropbox, c'est de se créer un compte. Il existe des forfaits payants pour avoir accès a plus d'espace de stockage, mais à la base, c'est gratuit. L'application peut être téléchargé sur le site Web de Dropbox. En ce qui concerne AWS, il existe plusieurs solutions et autant de forfaits qui y sont associés. Le site de AWS a énormément de documentation sur les différents services offerts et les fonctionalités de l'outil. Ils ont leur guide d'apprentissage et plus de 100 tutoriels. Leur documentation est très complète et il y a peu de raisons de recommander un des quelques livres en ligne qui existent et qui sont essentiellement des copiés-collés de leur site Web. AWS a aussi un chatbot qui peut répondre à vos question en temps réel et il apparaît assez efficace.


### Outils d'intelligence artificielle

Le chapitre 9 porte sur les différents outils liés à l'utilisation de l'intelligence artificielle. Plus spécifiquement, il présente le site d'OpenAI, qui contient notamment le fameux ChatGPT. Une grande quantité de publications, autant académiques que non académiques, sont parues dans les dernières années sur les différentes facettes de l'intelligence artificielle. La présente section fait état de quelques ressources utiles choisies pour leur pertinence et leur utilité dans l'apprentissage des outils d'intelligence artificielle d'OpenAI.

Le site Web de la compagnie OpenAI contient une grande quantité d'information sur l'utilisation de leurs différents outils. Leur site Web contient notamment un index des différents articles portant sur leurs produits. Il est possible de consulter ledit index à l'adresse suivante : https://openai.com/research. Tous les ouvrages disponibles ne sont pas nécessairement publiés dans des journaux revues par les pairs. Il faut faire attention avec les sources qu'on utilise qui sont disponibles gratuitement en ligne et dont les auteurs n'ont potentiellement pas eu à rendre de compte à des pairs avant leur publication. 

L'ouvrage *ChatGPT for Higher Education and Professional Development: A Guide to Conversational AI* de Stephen Atlas est intéressant puisqu'il discute des différents mythes entourant ChatGPT avant de se lancer dans comment l'utiliser à différentes fins. Il offre une vision édifiante de son utilisation dans le monde universitaire et répond à de nombreuses questions fréquemment posées. Le livre de Sinan Ozdemir intitulé *Quick Start Guide to Large Language Models: Strategies and Best Practices for Using ChatGPT and Other LLMs* est aussi considéré comme un bon outil pour apprendre comment fonctionne ChatGPT. Il offre aux lecteurs une grande quantité d'information utiles et touche également notamment aux meilleures pratiques à utiliser lors de l'utilisation d'outils tels que ChatGPT. Il présente également se qui se trouve derrière de tels outils et comment en tirer le plus possible. Enfin, plusieurs publications récentes traitent de trucs et astuces afin de bien commencer à utiliser. C'est notamment le cas de Lubiana et al. (2023) qui présente 10 choses à considérer lors de l'utilisation des récentes versions de ChatGPT, et de Patton et al. (2023) qui écrivent sur les opportunités et les défis de ChatGPT en sciences sociales numériques.


### Pièges pour usagers avancés

L'un des pièges importants à éviter lorsque le chercheur se retrouve à un niveau avancé est la peur de partager son code. Ceci est spécialement vrai pour ceux pour qui l'apprentissage c'est fait en silo. Estimant leur code comme étant une propriété intellectuelle, plusieurs chercheurs développent cette réticence et refusent de partager le fruit de leur labeur. Toutefois, partager son code comporte de nombreux avantages, non seulement pour les autres membres de la communauté, mais également pour le chercheur lui-même. D'un côté, cela permet de recevoir des rétroactions de la part d'autres chercheurs et développeurs. Cette collaboration peut donc grandement contribuer à l'amélioration de son code. De plus, partager son code représente une opportunité d'apprentissage pour les autres membres de la communauté qui peuvent s'en inspirer pour développer leurs compétences ou même le réutiliser dans leur propre projet. Cette transparence et cette collaboration sont donc avantageuses pour tous les partis.

Le deuxième piège pour usagers avancés duquel le chercheur avancé doit se méfier est de laisser le parfait devenir l’ennemi du bien. Certains chercheurs ont parfois tendance à être perfectionnistes et à perdre du temps et de l’énergie sur des détails mineurs qui n’ont, en fin de compte, aucune retombée majeure sur la qualité globale du projet, comme chercher à optimiser son code de manière excessive. Se soucier de la qualité de son travail est essentiel, mais le chercheur avancé doit également apprendre à savoir quand s’arrêter. 

Après avoir consacré de nombreuses heures et travaillé d’arrache-pied pour acquérir des connaissances avancées en codage, le chercheur a de quoi être fière. Toutefois, il doit se méfier de l’ultime pièges pour usagers avancés : manquer d'empathie et de compréhension envers les nouveaux utilisateurs. Certains chercheurs de niveau avancé peuvent oublier qu’ils ont déjà été, eux aussi, des débutants. Il faut éviter de prendre pour acquis certaines connaissances de base qui peuvent sembler très simple pour un chercheur avancé, mais très complexe pour un débutant. Soutenir les nouveaux utilisateurs dans leur apprentissage avec patients et empathie permet une meilleure transmission des connaissances. 


## Conclusion

Le but du présent chapitre était d'offrir des informations additionnelles aux chapitres précédents dans le but de faciliter l'apprentissage des différents outils de travail en sciences sociales numériques présentés. Nous avons ici mis l'accent sur deux choses afin d'aider le lecteur. Premièrement, nous avons offert plusieurs ressources à consulter afin d'accéder et d'apprendre à utiliser les outils mis de l'avant. Les différents outils ont été classé selon la difficulté perçue et relative de leur apprentissage. Nous avons classé les outils ainsi puisque c'est généralement l'ordre dans laquelle les practiciens des sciences sociales numériques les apprennent. Afin de faciliter l'expérience d'apprentissage des lecteurs, nous avons pré-sélectionné certaines lectures considérées pertinentes dans le but d'éviter aux lecteurs une surchage d'information. Nous avons choisi des ressources qui sont facilement accessibles en ligne et qui sont gratuites pour la plupart. 

Ensuite, à la fin de chaque section, nous avons présenté les différents pièges associés aux divers niveaux d'apprentissage. Notre expérience indique que plusieurs comportements et attitudes sont liés à certains stades d'apprentissage. Évidemment, certains peuvent survenir plus tôt ou tard que d'autres. L'important est d'être au courant des mauvais plis qu'il est possible d'adopter et de les adresser en amont. Plusieurs des pièges susmentionnés suivent de nombreux profesionnels pendant longtemps et compliquent leur travail individuel et collaboratif. Un practicien des sciences sociales numériques avertit en vaut deux.
